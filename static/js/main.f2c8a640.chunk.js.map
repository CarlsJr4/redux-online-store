{"version":3,"sources":["components/Header.js","components/Items/ItemsAddToCart.js","components/Items/ItemsCard.js","components/Items/ItemsContainer.js","components/Cart/CartItemOptions.js","components/Cart/CartItem.js","components/Cart/CartTotals.js","components/Cart/CartContainer.js","components/Shop.js","redux/reducers/index.js","redux/reducers/cartReducer.js","redux/reducers/gamesReducer.js","redux/reducers/totalsReducer.js","redux/store.js","App.js","index.js"],"names":["Header","className","ItemsAddToCart","game","id","dispatch","useDispatch","cart","useSelector","state","onClick","map","item","includes","alert","type","img","name","price","ItemsCard","src","alt","ItemsContainer","games","useEffect","data","uuidv4","key","CartItemOptions","index","htmlFor","onChange","e","newQuantity","target","value","cartItem","find","quantity","handleQuantityChange","deleteItem","CartItem","CartTotals","totals","subtotal","tax","total","Cart","cartItemState","cartItems","i","twoDecimals","Number","parseFloat","toFixed","items","reduce","accumulator","currentValue","calcTotals","length","Shop","rootReducer","combineReducers","action","updatedCart","newItem","splice","filter","gameList","priceInfo","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2c8a640.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header() {\r\n\treturn (\r\n\t\t<section className=\"header\">\r\n\t\t\t<h1>Welcome to GameShed!</h1>\r\n\t\t\t<h3>The best place to buy games online.</h3>\r\n\t\t</section>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function ItemsAddToCart({game, id}) {\r\n\tconst dispatch = useDispatch();\r\n\tconst cart = useSelector(state => state.cart);\r\n\r\n\tfunction addToCart() {\r\n\t\t// If the game is already in the cart, send an alert and do nothing\r\n\t\tconst cartIds = cart.map(item => item.id);\r\n\t\tif (cartIds.includes(id)) {\r\n\t\t\talert('Game is already in cart.');\r\n\t\t\treturn\r\n\t\t}  \t\t\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: 'ADD',\r\n\t\t\timg: game.img,\r\n\t\t\tname: game.name,\r\n\t\t\tprice: game.price,\r\n\t\t\tid\r\n\t\t});\r\n\t\treturn\r\n\t}\r\n\r\n\treturn (\r\n\t\t<button onClick={addToCart}>Add to cart</button>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport ItemsAddToCart from './ItemsAddToCart';\r\n\r\nexport default function ItemsCard({game, id}) {\r\n\treturn (\r\n\t\t<div className=\"itemsContainer__card\">\r\n\t\t\t<img src={game.img} alt=\"Video game\"/>\r\n\t\t\t<h3>{game.name}</h3>\r\n\t\t\t<p>${game.price}</p>\r\n\t\t\t<ItemsAddToCart game={game} id={id} />\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport ItemsCard from './ItemsCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { v4 as uuidv4} from 'uuid';\r\n\r\nexport default function ItemsContainer() {\r\n\tconst dispatch = useDispatch();\r\n\tconst games = useSelector(state => state.games);\r\n\r\n\tfunction retrieveGames() {\r\n\t// Normally we'd put an async request in here and get the results\r\n\t// Normally, ID would come directly from the database\r\n\t\tlet games = [\r\n\t\t\t{\r\n\t\t\t\tname: 'Doom Eternal',\r\n\t\t\t\tprice: 59.99,\r\n\t\t\t\timg: 'https://picsum.photos/200',\r\n\t\t\t\tid: uuidv4()\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Animal Crossing: New Horizons',\r\n\t\t\t\tprice: 59.99,\r\n\t\t\t\timg: 'https://picsum.photos/201',\r\n\t\t\t\tid: uuidv4()\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'Beat Saber',\r\n\t\t\t\tprice: 29.99,\r\n\t\t\t\timg: 'https://picsum.photos/202',\r\n\t\t\t\tid: uuidv4()\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'God of War',\r\n\t\t\t\tprice: 39.99,\r\n\t\t\t\timg: 'https://picsum.photos/203',\r\n\t\t\t\tid: uuidv4()\r\n\t\t\t}\r\n\t\t]\r\n\t\treturn games\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch({type: 'GET_GAMES', data: retrieveGames()});\r\n\t}, [dispatch])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Items</h1>\r\n\t\t\t<div className=\"itemsContainer\">\r\n\t\t\t\t{games.map((game) => \r\n\t\t\t\t\t<ItemsCard \r\n\t\t\t\t\t\tid={game.id} \r\n\t\t\t\t\t\tkey={game.id} \r\n\t\t\t\t\t\tgame={game}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function CartItemOptions({id, index}) {\r\n\tconst cart = useSelector(state => state.cart);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tfunction deleteItem(id) {\r\n\t\tdispatch({\r\n\t\t\ttype: 'REMOVE',\r\n\t\t\tid\r\n\t\t})\r\n\t}\r\n\r\n\tfunction handleQuantityChange(e, id) {\r\n\t\tconst newQuantity = e.target.value;\r\n\t\tconst cartItem = cart.find(item => item.id == id);\r\n\t\tcartItem.quantity = newQuantity;\r\n\t\tdispatch({\r\n\t\t\ttype: 'INCREMENT',\r\n\t\t\tcartItem,\r\n\t\t\tindex\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"cartItem__options\">\r\n\t\t\t<label htmlFor=\"cartItem__qty\">Quantity:</label>\t\r\n\t\t\t<select onChange={(e) => handleQuantityChange(e, id)} name=\"cartItem__qty\" id=\"cartItem__qty\">\r\n\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t<option value=\"6\">6</option>\r\n\t\t\t\t<option value=\"7\">7</option>\r\n\t\t\t\t<option value=\"8\">8</option>\r\n\t\t\t\t<option value=\"9\">9</option>\r\n\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t</select>\r\n\t\t\t<button onClick={() => deleteItem(id)}>Delete</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport CartItemOptions from './CartItemOptions'\r\n\r\nexport default function CartItem({item, id, index}) {\r\n\treturn (\r\n\t\t<div className=\"cartItem\">\r\n\t\t\t<img src={item.img} alt={item.name}/>\r\n\t\t\t<div className=\"cartItem__info\">\r\n\t\t\t\t<p>{item.name}</p>\r\n\t\t\t\t<p>${item.price}</p>\r\n\t\t\t\t<CartItemOptions id={id} index={index} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function CartTotals() {\r\n\tconst {subtotal, tax, total} = useSelector(state => state.totals);\r\n\t// TODO: Read props here to render totals\r\n\t// How can we calculate the total price of the games?\r\n\t// We could examine the cart state and add up all the prices\r\n\t// We could examine the quantity in the state and multiply it by the price\r\n\r\n\t// Problem:\r\n\t// How can we listen for changes to the cart? \r\n\t// Should we use an effect hook?\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Subtotal: ${subtotal}</p>\r\n\t\t\t<p>Tax: ${tax}</p>\r\n\t\t\t<p>Total: ${total}</p>\r\n\t\t\t<button>Checkout</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport CartItem from './CartItem';\r\nimport CartTotals from './CartTotals';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nexport default function Cart() {\r\n\tconst dispatch = useDispatch();\r\n\tconst cartItemState = useSelector(state => state.cart);\r\n\r\n\tconst cartItems = cartItemState.map((item, i) => \r\n\t\t<CartItem \r\n\t\t\tkey={item.id} \r\n\t\t\tid={item.id} \r\n\t\t\titem={item}\r\n\t\t\tindex={i} \r\n\t\t/>\r\n\t);\r\n\r\n\tfunction twoDecimals(value) {\r\n\t\treturn Number.parseFloat(value).toFixed(2);\r\n\t}\r\n\r\n\tfunction calcTotals(items) {\r\n\t\tconst prices = items.map(item => {\r\n\t\t\tlet finalPrice = item.price * item.quantity\r\n\t\t\treturn finalPrice\r\n\t\t});\r\n\t\t\r\n\t\tconst subtotalReducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\t\tlet subtotal = prices.reduce(subtotalReducer, 0);\r\n\t\tlet tax = subtotal * 0.10;\r\n\t\tlet total = subtotal + tax;\r\n\r\n\t\tsubtotal = twoDecimals(subtotal);\r\n\t\ttax = twoDecimals(tax);\r\n\t\ttotal = twoDecimals(total);\r\n\r\n\t\treturn {\r\n\t\t\tsubtotal,\r\n\t\t\ttax,\r\n\t\t\ttotal\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst totals = calcTotals(cartItemState);\r\n\t\tdispatch({\r\n\t\t\ttype: 'CALC_TOTALS',\r\n\t\t\ttotals\r\n\t\t})\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"cartContainer\">\r\n\t\t\t<h1>Cart</h1>\r\n\t\t\t<div className=\"cartContainer__items\">\r\n\t\t\t\t{(cartItemState.length > 0) ? cartItems :  <p>Your cart is empty.</p>}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"cartContainer__totals\">\r\n\t\t\t\t<CartTotals />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport ItemsContainer from './Items/ItemsContainer';\r\nimport CartContainer from  './Cart/CartContainer';\r\n\r\nexport default function Shop() {\r\n\treturn (\r\n\t\t<section className=\"shop\">\r\n\t\t\t<ItemsContainer />\r\n\t\t\t<CartContainer />\r\n\t\t</section>\r\n\t)\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport cartReducer from './cartReducer';\r\nimport gamesReducer from './gamesReducer';\r\nimport totalsReducer from './totalsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\tcart: cartReducer,\r\n\tgames: gamesReducer,\r\n\ttotals: totalsReducer\r\n});\r\n\r\nexport default rootReducer;","// Each reducer handles a small slice of the app's state\r\n// Now we need a reducer to handle adding items to the cart \r\nexport default function cartReducer(cart = [], action) {\r\n\tlet updatedCart = [...cart];\r\n\tconst {img, name, price, id, cartItem, index} = action;\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD':\r\n\t\t\tconst newItem = {\r\n\t\t\t\timg,\r\n\t\t\t\tname,\r\n\t\t\t\tprice,\r\n\t\t\t\tid,\r\n\t\t\t\tquantity: 1\r\n\t\t\t}\r\n\t\t\tupdatedCart.splice(0, 0, newItem); // Add items in reverse order for better UX\r\n\t\t\treturn updatedCart\r\n\t\tcase 'REMOVE':\r\n\t\t\tupdatedCart = updatedCart.filter(item => item.id !== id);\r\n\t\t\treturn updatedCart\r\n\t\tcase 'INCREMENT':\r\n\t\t\tupdatedCart.splice(index, 1, cartItem);\r\n\t\t\treturn updatedCart\r\n\t\tdefault:\r\n\t\t\treturn cart\r\n\t}\r\n}","export default function gamesReducer(gameList = [], action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'GET_GAMES':\r\n\t\t\treturn action.data\r\n\t\tdefault: \r\n\t\t\treturn gameList\r\n\t}\r\n}","// Here we will write a reducer to handle totals\r\n// We would have to rely on an external value though. Is this allowed?\r\n// As long as we don't change the arguments it should be ok right?\r\nexport default function totalsReducer(state = {subtotal: 0, tax: 0, total: 0}, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'CALC_TOTALS':\r\n\t\t\tconst {subtotal, tax, total} = action.totals;\r\n\t\t\tconst priceInfo = {\r\n\t\t\t\tsubtotal, \r\n\t\t\t\ttax, \r\n\t\t\t\ttotal\r\n\t\t\t}\r\n\t\t\treturn priceInfo\r\n\t\tdefault: \r\n\t\t\treturn state\r\n\t}\r\n}","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(\r\n\trootReducer, \r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t);\r\n\r\nexport default store;","import React from 'react';\nimport Header from './components/Header';\nimport Shop from './components/Shop';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nfunction App() {\n  return (\n\t\t<Provider store={store}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<Shop />\n\t\t\t</div>\n\t\t</Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}